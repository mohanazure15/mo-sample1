name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Set up Go environment
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.22.3

    # Install dependencies
    - name: Install dependencies
      run: go mod download

    # Run tests (assuming you have tests defined)
    - name: Run tests
      run: go test ./...

  build:
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
    - uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Determine semantic version tag
    - name: Set semantic version
      id: semver
      run: |
        VERSION=$(date +'%Y.%m.%d.%H%M%S')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          docker.io/pawandevops/cockpit-docker-images:latest
          docker.io/pawandevops/cockpit-docker-images:${{ env.VERSION }}

  run-docker-on-ec2:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Add SSH key to agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run Docker image on EC2
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          EC2_PUBLIC_IP: ${{ secrets.EC2_HOST }} # Provided as a secret
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${EC2_HOST} 'sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && sudo docker run -d pawandevops/cockpit-docker-images:latest'
