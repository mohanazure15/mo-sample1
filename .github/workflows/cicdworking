name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'terraform/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'terraform/**'


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.3

      # Install dependencies
      - name: Install dependencies
        run: go mod download

      # Run Go tests
      - name: Run Go tests
        run: go test ./...

      # Build Docker image for testing
      - name: Build Docker image
        run: docker build . -t test-image

      # Run Docker container
      - name: Run Docker container
        run: docker run -d -p 8080:8080 --name test-container test-image

      # Wait for the service to be ready
      - name: Wait for the service to be ready
        run: sleep 10

      # Test the health endpoint
      - name: Test health endpoint
        run: |
          response=$(curl -s http://localhost:8080/api/health)
          echo "Response: $response"
          if [ "$response" != "\"healthy\"" ]; then
            echo "Health check failed"
            exit 1
          fi

      # Stop the Docker container
      - name: Stop Docker container
        run: docker stop test-container

      # Remove the Docker container
      - name: Remove Docker container
        run: docker rm test-container

  build:
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Fetch tags
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      # Get latest tag
      - name: Get latest tag
        id: latest_tag
        run: echo "::set-output name=tag::$(git describe --tags $(git rev-list --tags --max-count=1))"

      # Build and push Docker image using docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            docker.io/pawandevops/cockpit-docker-images:latest
            docker.io/pawandevops/cockpit-docker-images:${{ steps.latest_tag.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Add SSH key to agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH into EC2 and manage Docker containers
        env:
          EC2_PUBLIC_IP: ${{ secrets.EC2_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${EC2_PUBLIC_IP} << 'EOF'
            # Stop containers with the specified image
            sudo docker stop $(sudo docker ps -q --filter ancestor=pawandevops/cockpit-docker-images:latest)

            # Remove containers with the specified image
            sudo docker rm $(sudo docker ps -a -q --filter ancestor=pawandevops/cockpit-docker-images:latest)

            # Run new container
            sudo docker run -d -p 8080:8080 pawandevops/cockpit-docker-images:latest
          EOF
